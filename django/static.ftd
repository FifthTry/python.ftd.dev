-- ft.page-with-toc: `ftd_django.static()` Handler
toc: $config.django-toc
sub-sections: $config.documentation-section

When using [`ftd_django.TemplateBackend`](django/template-backend/), the ftd
files may refer to static files.

Django has support for serving static files, but FPM has superior asset
management support, for example it allows you to refer to static files from
fpm packages that are dependencies of your fpm package, and to use
`assets.files.*` entries which convert 404 into build time errors (if you refer
to a Django static asset that actually does not exist on disc, your visitors get
a 404 error, where as if you use refer to a missing fpm asset, there is build
time error, or at least a run time 500 server error).

To use the `ftd_django.static()` you have to add it to your `urls.py`:

-- ft.code:
lang: py

import ftd_django

urlpatterns = [
    # ... the rest of your URLconf goes here ...
] + ftd_django.static()

-- ft.markdown:


`ftd_django.static()` reads file from directory with given `path` and call
[`ftd.render()`](ftd/render) function to render the content. It uses
`ftd_django.helpers.validate_settings()`[django/helpers] to get the `fpm base`
and `fpm package root`. If `ftd.render()` function returns `content_type` `ftd`
so it will call `ftd.render` to interpret the `ftd` document, otherwise it will
render the file content directly.

Implementation Note [Deprecated]: [Static Routing](django/static-routing/)

-- ft.h1: `fpm build`

- Deprecated

`ftd_django.static()` reads files from `.build` folder in `fpm package root`.
The `.build` folder is created by running `fpm build`, so this command must be
run before everything will work correctly.
